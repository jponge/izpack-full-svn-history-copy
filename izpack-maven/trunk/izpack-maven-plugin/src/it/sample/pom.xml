<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.codehaus.izpack</groupId>
  <artifactId>izpack-maven-plugin-example</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>Empty Example</name>

  <packaging>jar</packaging>
  
  <dependencies>
    
    <!-- this will override the one in the plugin -->
    <dependency>
      <groupId>org.codehaus.izpack</groupId>
      <artifactId>izpack-standalone-compiler</artifactId>
      <version>4.1.1</version>
      <optional>true</optional>
    </dependency>
    
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>1.5.6</version>
    </dependency>
    
  </dependencies>
  
  <build>
     
    <defaultGoal>package</defaultGoal>
    
      <plugins>

        <!-- configure the compiler to use 1.5  -->
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
            <source>1.5</source>
            <target>1.5</target>
          </configuration>
        </plugin>
        
        <!--  package built classes into the panels into ${staging}/bin/panel -->        
        
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.2</version>
          <executions>
            <!-- package each panel jar from the built classes and place where standalone compiler can pickup -->
            
            <!-- Another option is to build all panels into a jar outside of this proejct, then use -->
            <!-- maven-dependency-plugin to unpack it, and use jar plugins repackage customer panel -->
            <!-- to the right place           -->
            
            <!-- or use maven-assembly-plugin to assemble all the panel jars in to to another jar  -->
            <!-- and use dependency plugin to unpack it to the right place place                   -->
            
            <!-- see http://www.nabble.com/Adding-custom-panels-without-rebuilding-standalone-compiler.jar-td18297470.html -->
            
            <execution>
              <id>create-myhellopanel-jar</id>
              <phase>process-classes</phase>
              <goals>
                <goal>jar</goal>
              </goals>
              <configuration>
                <archive>
                  <addMavenDescriptor>false</addMavenDescriptor>
                </archive>              
                <includes>
                  <include>**/MyHelloPanel.class</include>
                </includes>
                <finalName>MyHelloPanel</finalName>
                <outputDirectory>${staging.dir}/bin/panels</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!--  copy other checked resource into staging area, expected by install.xml -->
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.1</version>
          <executions>
            <execution>
              <id>create-staging-area</id>
              <phase>process-resources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <tasks>
                  <copy todir="${staging.dir}">
                    <fileset dir="${basedir}/src/izpack" />
                  </copy>
                </tasks>
              </configuration>
            </execution>
            
          </executions>
        </plugin>

        <!--  prepare depedencies so that izpack jar tag to pickup at compile time -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.0</version>
          <executions>
            <execution>
              <id>standard-installer</id>
              <phase>process-resources</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <stripVersion>true</stripVersion>
                <excludeGroupIds>org.codehaus.izpack</excludeGroupIds> <!-- dont want standalone compiler -->
                <outputDirectory>${staging.dir}/dependency</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>


        <!--  see install.xml to see how MyHelloPanel is used -->
        <plugin>
          <groupId>org.codehaus.izpack</groupId>
          <artifactId>izpack-maven-plugin</artifactId>
          <version>1.0-alpha-4</version>
          <configuration>
            <izpackBasedir>${staging.dir}</izpackBasedir>
            <customPanelDirectory>${staging.dir}</customPanelDirectory>
          </configuration>
          <executions>
            <execution>
              <id>standard-installer</id>
              <phase>package</phase>
              <goals>
                <goal>izpack</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        
      </plugins>
  
  </build>
  
  <properties>
    <staging.dir>${project.build.directory}/staging</staging.dir>
  </properties>

</project>
