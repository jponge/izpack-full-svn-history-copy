package com.izforge.izpack.protobuf;

option java_package = "com.izforge.izpack.protobuf";
option java_outer_classname = "IzPackProtos";

message Info {
    optional string appName = 1;
    optional string appVersion = 2;
    optional string installationSubPath = 3;
    repeated Author authors = 4;
    optional string appURL = 5;
    optional string javaVersion = 6;
    optional bool jdkRequired = 7;
    optional string installerBase = 8;
    optional string webDirURL = 9;
    optional string uninstallerName = 10;
    optional string uninstallerCondition = 11;
    optional string summaryLogFilePath = 12;
    optional string packDecoderClassName = 13;
    optional string unpackerClassName = 14;
    optional bool writeInstallationInformation = 15;
    optional bool pack200Compression = 16;
}

message Author {
    optional string name = 1;
    optional string email = 2;
}

message PackFile {
    optional string targetPath = 1;
    optional uint64 length = 2;
    optional sint64 mtime = 3;
    optional bool isDirectory = 4;
    optional int32 override = 5;
    optional string previousPackId = 6;
    optional sint64 offsetInPreviousPack = 7;
    optional bool pack200Jar = 8;
    optional string condition = 9;
    repeated OsConstraint osConstraints = 10;
}

message OsConstraint {
    optional string arch = 1;
    optional string family = 2;
    optional string jre = 3;
    optional string name = 4;
    optional string version = 5;
}

message ParsableFile {
    optional string path = 1;
    optional string type = 2;
    optional string encoding = 3;
    optional string condition = 4;
    repeated OsConstraint osConstraints = 5;
}

message ExecutableFile {
       optional string path = 1;
       optional int32 executionStage = 2;
       optional string mainClass = 3;
       optional int32 type = 4;
       optional int32 onFailure = 5;
       repeated string argList = 6;
       repeated OsConstraint osList = 7;
       optional bool keepFile = 8;
       optional string condition = 9;
}
